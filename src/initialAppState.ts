import { SortingType } from "./utility/modRowSorting";

const initialState = {
  currentPreset: {
    mods: [],
    name: "",
  },
  categories: [],
  lastSelectedPreset: null,
  presets: [],
  filter: "",
  alwaysEnabledMods: [],
  hiddenMods: [],
  saves: [],
  isOnboardingToRun: false,
  hasConfigBeenRead: false,
  wasOnboardingEverRun: false,
  isDev: false,
  isAdmin: false,
  areThumbnailsEnabled: true,
  isClosedOnPlay: false,
  isAuthorEnabled: true,
  isMakeUnitsGeneralsEnabled: false,
  isScriptLoggingEnabled: false,
  isSkipIntroMoviesEnabled: false,
  isAutoStartCustomBattleEnabled: false,
  allMods: [],
  packsData: {},
  packCollisions: { packTableCollisions: [], packFileCollisions: [] },
  packCollisionsCheckProgress: {
    currentIndex: -1,
    maxIndex: 0,
    firstPackName: "",
    secondPackName: "",
    type: "Files",
  },
  newMergedPacks: [],
  pathsOfReadPacks: [],
  appFolderPaths: { gamePath: "", contentFolder: "", dataFolder: "" },
  isSetAppFolderPathsDone: false,
  overwrittenDataPackedFiles: {},
  outdatedPackFiles: {},
  startArgs: [],
  currentTab: "mods",
  isCreateSteamCollectionOpen: false,
  isImportSteamCollectionOpen: false,
  isWH3Running: false,
  toasts: [],
  removedModsCategories: {},
  // before we make symbolic links in data queue those mods to be re-enabled
  dataModsToEnableByName: [],
  // if a enabled mod was removed it's possible it was updated, re-enabled it then
  removedModsData: [],
  modRowsSortingType: SortingType.Ordered,
  importedMods: [],
  availableLanguages: ["en"],
  currentLanguage: "en",
  packDataOverwrites: {},
  modBeingCustomized: undefined,
  customizableMods: {},
  currentGame: "wh3",
  steamCollectionsToImport: {},
  isHelpOpen: false,
  lastModThatWasRead: undefined,
  currentlyReadingMod: undefined,
} as AppState;

export default initialState;
